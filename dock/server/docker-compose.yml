version: '3.8'

# 服務定義 Services definition
services:
  # 數據庫服務 Database service
  postgres:
    container_name: talent-postgres-prod
    image: postgres:15-alpine
    ports:
      - "5432:5432"  # 暫時開放端口以便調試
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_DB=class_schedule
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=talent_password
      - TZ=Asia/Taipei
      - PGTZ=Asia/Taipei
    command: postgres -c timezone=Asia/Taipei
    networks:
      - server_talent-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d class_schedule"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # 後端服務 Backend service
  backend:
    container_name: talent-backend-prod
    build:
      context: ../../server
      dockerfile: Dockerfile.prod
    image: talent-backend-prod
    expose:
      - "9006"  # 只暴露端口，不直接對外開放
    environment:
      - NODE_ENV=production
      - PORT=3006
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=class_schedule
      - DB_USER=postgres
      - DB_PASSWORD=talent_password
      - JWT_SECRET=talent_teacher_secret_key
      - JWT_EXPIRES_IN=24h
      - TZ=Asia/Taipei
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - server_talent-network
    restart: always

  # 前端服務 Frontend service
  frontend:
    container_name: talent-frontend-prod
    build:
      context: ../../web
      dockerfile: Dockerfile.prod
    image: talent-frontend-prod
    expose:
      - "80"  # 只暴露端口，不直接對外開放
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=/schedule-api
      - TZ=Asia/Taipei
    networks:
      - server_talent-network
    restart: always

  # Nginx 反向代理服務 Nginx reverse proxy service
  nginx:
    container_name: talent-nginx-prod
    image: nginx:alpine
    ports:
      - "9080:80"  # 使用 9080 端口
      - "9443:443"  # 使用 9443 端口
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /var/www/html:/var/www/html  # Let's Encrypt 驗證目錄
      - /etc/letsencrypt:/etc/letsencrypt:ro  # SSL 證書目錄（唯讀）
    depends_on:
      - frontend
      - backend
    networks:
      - server_talent-network
    restart: always

# 卷定義 Volumes definition
volumes:
  postgres_data:
    name: talent-postgres-data

# 網絡定義 Networks definition
networks:
  server_talent-network:
    name: server_talent-network 